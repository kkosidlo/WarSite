@using WarStarts.Enum;

@{
    ViewBag.Title = "KillsView";
}

<script>

    setInterval("update();", 60000);

    function update() {
        window.location = location.href;
    }
</script>

@model  List<WarStarts.Models.CharacterDeathsViewModel>


<br />
<p><i>Only characters with level 250 or above are included on this list. List is being automatically synchronized every 5 minutes.</i></p>

<h2>Total kills</h2>

<div>
    @{
        var newList = Model.Select(x => x).Where(y => y.Guild == GuildEnum.Reapers && y.Level >= 250).OrderByDescending(z => DateTime.Parse(z.TimeOfDeath));
        var secondList = Model.Select(x => x).Where(y => y.Guild == GuildEnum.Showland && y.Level >= 250).OrderByDescending(z => DateTime.Parse(z.TimeOfDeath));
    }
</div>
<h2 style="color:green">Showland kills: @newList.Count()</h2>
<h2 style="color:red; float:right;position:absolute;margin-left:568px; margin-top:-43px">Reapers kills: @secondList.Count()</h2>

<table class="table table-hover" style="width:50%;">
    <thead>
        <tr>
            <th>250+</th>
            <th>300+</th>
            <th>400+</th>
            <th>500+</th>
            <th>600+</th>
            <th>700+</th>
            <th>800+</th>
            <th>vs.</th>

        </tr>
    </thead>

    <tbody>

        <tr>
            <td>
                @Model.Where(x => x.Level >= 250 && x.Level < 300 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 300 && x.Level < 400 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 400 && x.Level < 500 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 500 && x.Level < 600 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 600 && x.Level < 700 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 700 && x.Level < 800 && x.Guild == GuildEnum.Reapers).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 800 && x.Level < 900 && x.Guild == GuildEnum.Reapers).Count()
            </td>
        </tr>
        <tr></tr>
    </tbody>

</table>

<table class="table table-hover" style="width:50%; float:right;margin-top:-94px">
    <thead>
        <tr>
            <th>250+</th>
            <th>300+</th>
            <th>400+</th>
            <th>500+</th>
            <th>600+</th>
            <th>700+</th>
            <th>800+</th>
        </tr>
    </thead>

    <tbody>
        <tr>
            <td>
                @Model.Where(x => x.Level >= 250 && x.Level < 300 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 300 && x.Level < 400 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 400 && x.Level < 500 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 500 && x.Level < 600 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 600 && x.Level < 700 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 700 && x.Level < 800 && x.Guild == GuildEnum.Showland).Count()
            </td>
            <td>
                @Model.Where(x => x.Level >= 800 && x.Level < 900 && x.Guild == GuildEnum.Showland).Count()
            </td>
        </tr>
    </tbody>
</table>





<table class="table table-hover" style="width:50%; float:left">
    <thead>
        <tr>
            <th>Name</th>
            <th>Level</th>
            <th>Killers</th>
        </tr>
    </thead>
    <tbody>
        @{
            string generatedHtml;
            string nameCharacterLink1 = null;

        }
        @foreach (var item in newList)
        {
            generatedHtml = null;

            foreach (var itemchar in item.Killers)
            {
                if (itemchar == item.Killers.Last())
                {
                    generatedHtml += $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={itemchar}\" target=\"_blank\">{itemchar}.</a>";
                }
                else
                {
                    generatedHtml += $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={itemchar}\" target=\"_blank\">{itemchar},</a>";
                }
            }
            {
                nameCharacterLink1 = $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={item.Name}\" target=\"_blank\">{item.Name} </a>";
            }
            <tr>

                <td style="height:200px">@Html.Raw(nameCharacterLink1)</td>
                <td style="height:200px">@item.Level</td>
                <td style="height:200px">
                    <b style="display: inline; float:left">@DateTime.Parse(item.TimeOfDeath) killed by: </b>@Html.Raw(generatedHtml.TrimEnd(','))
                </td>
            </tr>
        }

    </tbody>


</table>


<table class="table table-hover" style="width:50%;">
    <thead>
        <tr>
            <th>Name</th>
            <th>Level</th>
            <th>Killers</th>
        </tr>
    </thead>
    <tbody>
        @{
            string generatedHtml1 = null;
            string nameCharacterLink = null;
        }
        @foreach (var item in secondList)
        {
            generatedHtml1 = null;

            foreach (var itemchar in item.Killers)
            {
                if (itemchar == item.Killers.Last())
                {
                    generatedHtml1 += $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={itemchar}\" target=\"_blank\">{itemchar}.</a>";
                }
                else
                {
                    generatedHtml1 += $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={itemchar}\" target=\"_blank\">{itemchar},</a>";
                }
            }
            {
                nameCharacterLink = $"<a style=\"color:#333; float:left; display: inline\" href=\"https://secure.tibia.com/community/?subtopic=characters&name={item.Name}\" target=\"_blank\">{item.Name} </a>";
            }
            <tr>
                <td style="height:200px">@Html.Raw(nameCharacterLink)</td>
                <td style="height:200px">@item.Level</td>
                <td style="height:200px">
                    <b style="display: inline; float:left">@DateTime.Parse(item.TimeOfDeath) killed by: </b>@Html.Raw(generatedHtml1.Substring(0, generatedHtml1.Length - 2))
                </td>
            </tr>
        }

    </tbody>


</table>

